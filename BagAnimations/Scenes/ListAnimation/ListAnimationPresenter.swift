//
//  ListAnimationPresenter.swift
//  BagAnimations
//
//  Created by kkolontay on 10/30/17.
//  Copyright (c) 2017 kkolontay.com. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol ListAnimationPresentationLogic
{
//  func presentSomething(response: ListAnimation.Something.Response)
  func presentAnimation(response: ListAnimation.FetchAnimationItems.Response)
}

class ListAnimationPresenter: ListAnimationPresentationLogic
{
  weak var viewController: ListAnimationDisplayLogic?
  
  // MARK: Do something
  func presentAnimation(response: ListAnimation.FetchAnimationItems.Response) {
    if response.animationItems == nil {
      let listView = ListAnimation.FetchAnimationItems.ViewModel(animations: nil, error: "Nothing found")
      viewController?.displayAnimations(viewModel: listView)
    } else {
      if response.error != nil {
        let listView = ListAnimation.FetchAnimationItems.ViewModel(animations: nil, error: response.error)
        viewController?.displayAnimations(viewModel: listView)
        return
      }
      if response.animationItems != nil {
        viewController?.displayAnimations(viewModel: fetchViewModel(response: response))
      }
    }
  }
  
  func fetchViewModel(response: ListAnimation.FetchAnimationItems.Response) -> ListAnimation.FetchAnimationItems.ViewModel {
    var listAnimgationViewModel: Array<ListAnimation.FetchAnimationItems.ViewModel.Animation> = Array<ListAnimation.FetchAnimationItems.ViewModel.Animation>()
    for item in response.animationItems! {
      let animation = ListAnimation.FetchAnimationItems.ViewModel.Animation(image: item.smallAnimationData != nil ? UIImage.gifImageWithData(item.smallAnimationData! as Data): nil, width: CGFloat(item.smallAnimationWidth), height: CGFloat(item.smallAnimationHeight)  )
      listAnimgationViewModel.append(animation)
    }
    return ListAnimation.FetchAnimationItems.ViewModel(animations: listAnimgationViewModel, error: nil)
  }
  
//  func presentSomething(response: ListAnimation.Something.Response)
//  {
//    let viewModel = ListAnimation.Something.ViewModel()
//    viewController?.displaySomething(viewModel: viewModel)
//  }
}
